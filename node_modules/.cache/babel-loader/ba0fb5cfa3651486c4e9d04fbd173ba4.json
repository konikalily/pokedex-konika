{"ast":null,"code":"var _jsxFileName = \"/Users/konika/Documents/GitHub/pokedex-konika/src/CaughtPokemon.js\",\n    _s = $RefreshSig$();\n\n// import { useState } from \"react\";\n// const CaughtPokemon = () => {\n//   const [caught, setCaught] = useState([]);\n//   const catchPokemon = () => {\n//     const pokemonNames = [\n//       \"Abra\",\n//       \"Altaria\",\n//       \"Bergmite\",\n//       \"Bayleef\",\n//       \"Beautifly\",\n//       \"Bonsly\",\n//     ];\n//     let randomCaughtPokemon = Math.floor(Math.random() * pokemonNames.length);\n//     setCaught(caught.concat(pokemonNames[randomCaughtPokemon]));\n//   };\n//   const date = new Date().toLocaleDateString();\n//   console.log(caught);\n//   return (\n//     <div>\n//       <p>\n//         Caught {caught.length} Pokemon on {date}\n//       </p>\n//       <button onClick={() => catchPokemon()}> Catch Pokemon</button>\n//       <ul>\n//         {caught.map((element, i) => {\n//           return <li key={i}>{element}</li>;\n//         })}\n//         {/* <li> {caught}</li> */}\n//       </ul>\n//     </div>\n//   );\n// };\n// export default CaughtPokemon;\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CaughtPokemon = () => {\n  _s();\n\n  const [caught, setCaught] = useState([]);\n  const newPokemon = [\"Spearow\", \"Pikachu\", \"Ditto\"];\n\n  const catchPokemon = () => {\n    const randomPokemon = Math.floor(Math.random() * newPokemon.length);\n    setCaught(previousCaught => {\n      return previousCaught.concat(newPokemon[randomPokemon]);\n    });\n  };\n\n  const date = new Date().toLocaleDateString();\n  console.log(caught);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: catchPokemon,\n      children: \"Click Me!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Caught \", caught.length, \" Pokemon on \", date]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), caught.map((item, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: item\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CaughtPokemon, \"0kqYNYussB1oAOvqIhK/0poZgoY=\");\n\n_c = CaughtPokemon;\nexport default CaughtPokemon;\n\nvar _c;\n\n$RefreshReg$(_c, \"CaughtPokemon\");","map":{"version":3,"sources":["/Users/konika/Documents/GitHub/pokedex-konika/src/CaughtPokemon.js"],"names":["React","useState","CaughtPokemon","caught","setCaught","newPokemon","catchPokemon","randomPokemon","Math","floor","random","length","previousCaught","concat","date","Date","toLocaleDateString","console","log","map","item","i"],"mappings":";;;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAMI,UAAU,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,OAAvB,CAAnB;;AAEA,QAAMC,YAAY,GAAG,MAAM;AACzB,UAAMC,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,UAAU,CAACM,MAAtC,CAAtB;AACAP,IAAAA,SAAS,CAAEQ,cAAD,IAAoB;AAC5B,aAAOA,cAAc,CAACC,MAAf,CAAsBR,UAAU,CAACE,aAAD,CAAhC,CAAP;AACD,KAFQ,CAAT;AAGD,GALD;;AAMA,QAAMO,IAAI,GAAG,IAAIC,IAAJ,GAAWC,kBAAX,EAAb;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYf,MAAZ;AACA,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAEG,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,4BACUH,MAAM,CAACQ,MADjB,kBACqCG,IADrC;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAKGX,MAAM,CAACgB,GAAP,CAAW,CAACC,IAAD,EAAOC,CAAP,kBACV;AAAA,gBAAaD;AAAb,OAASC,CAAT;AAAA;AAAA;AAAA;AAAA,YADD,CALH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAxBD;;GAAMnB,a;;KAAAA,a;AA0BN,eAAeA,aAAf","sourcesContent":["// import { useState } from \"react\";\n\n// const CaughtPokemon = () => {\n//   const [caught, setCaught] = useState([]);\n\n//   const catchPokemon = () => {\n//     const pokemonNames = [\n//       \"Abra\",\n//       \"Altaria\",\n//       \"Bergmite\",\n//       \"Bayleef\",\n//       \"Beautifly\",\n//       \"Bonsly\",\n//     ];\n//     let randomCaughtPokemon = Math.floor(Math.random() * pokemonNames.length);\n//     setCaught(caught.concat(pokemonNames[randomCaughtPokemon]));\n//   };\n\n//   const date = new Date().toLocaleDateString();\n//   console.log(caught);\n//   return (\n//     <div>\n//       <p>\n//         Caught {caught.length} Pokemon on {date}\n//       </p>\n//       <button onClick={() => catchPokemon()}> Catch Pokemon</button>\n//       <ul>\n//         {caught.map((element, i) => {\n//           return <li key={i}>{element}</li>;\n//         })}\n//         {/* <li> {caught}</li> */}\n//       </ul>\n//     </div>\n//   );\n// };\n// export default CaughtPokemon;\n\nimport React from \"react\";\nimport { useState } from \"react\";\n\nconst CaughtPokemon = () => {\n  const [caught, setCaught] = useState([]);\n\n  const newPokemon = [\"Spearow\", \"Pikachu\", \"Ditto\"];\n\n  const catchPokemon = () => {\n    const randomPokemon = Math.floor(Math.random() * newPokemon.length);\n    setCaught((previousCaught) => {\n      return previousCaught.concat(newPokemon[randomPokemon]);\n    });\n  };\n  const date = new Date().toLocaleDateString();\n  console.log(caught);\n  return (\n    <div>\n      <button onClick={catchPokemon}>Click Me!</button>\n      <p>\n        Caught {caught.length} Pokemon on {date}\n      </p>\n      {caught.map((item, i) => (\n        <li key={i}>{item}</li>\n      ))}\n    </div>\n  );\n};\n\nexport default CaughtPokemon;\n"]},"metadata":{},"sourceType":"module"}